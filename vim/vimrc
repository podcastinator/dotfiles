
set nocompatible
filetype plugin indent on
syntax on

" use case-smart searching
set ignorecase 
set smartcase

" set line numbers
set number

" cmdline history
set history=1000

" allow backspace in insert mode
set backspace=indent,eol,start

" buffers can exist in the background
set hidden

" set window title
set title


" intelligent indentation
set autoindent
set smartindent
" show existing tab with 4 spaces width
set tabstop=4
" when indenting with '>', use 4 spaces width
set shiftwidth=4
" on pressing tab, insert 4 spaces
set expandtab
" Auto indent pasted text
nnoremap p p=`]<C-o>
nnoremap P P=`]<C-o>

" plugins start
call plug#begin('~/.vim/plugged')

" file explorer
Plug 'scrooloose/nerdtree'
" colorscheme
Plug 'altercation/vim-colors-solarized'
" commenting
Plug 'scrooloose/nerdcommenter'
" tmux integration
Plug 'christoomey/vim-tmux-navigator'


" plugins end
call plug#end()

" enable syntax highlighting
if !exists("g:syntax_on")
    syntax enable
endif


" solarized theme
let g:solarized_termtrans = 1
let g:solarized_termcolors=256
set background=dark
colorscheme solarized

if has("gui_running")
    "tell the term has 256 colors
    set t_Co=256
end

" use System Clipboard:
set clipboard^=unnamed,unnamedplus

" map Leader to space
let mapleader = ","

" enable mouse support
set mouse=a

" f to toggle tree view
nnoremap <Leader>f :NERDTreeToggle<Enter>

" Quick jumping between splits
map <C-J> <C-W>j
map <C-K> <C-W>k
map <C-H> <C-W>h
map <C-L> <C-W>l

" Open new splits easily
map vv <C-W>v
map ss <C-W>s
map Q  <C-W>q

" Open splits on the right and below
set splitbelow
set splitright

" Automatically resize splits when resizing window
autocmd VimResized * wincmd = 

" Keep 5 lines below and above the cursor
set scrolloff=5 


" Navigate in insert mode to start/end of line
inoremap <C-a> <C-o>0
inoremap <C-e> <C-o>$


" NerdCommenter customizations
" Allow commenting and inverting empty lines (useful when commenting a region)
let g:NERDCommentEmptyLines = 1


" lhs comments
"map ,# :s/^/#/<CR>
"map ,/ :s/^/\/\//<CR>
"map ,> :s/^/> /<CR>
"map ," :s/^/\"/<CR>
"map ,% :s/^/%/<CR>
"map ,! :s/^/!/<CR>
"map ,; :s/^/;/<CR>
"map ,- :s/^/--/<CR>
"map ,c :s/^\/\/\\|^--\\|^> \\|^[#"%!;]//<CR>
"
"" wrapping comments 
"map ,* :s/^\(.*\)$/\/\* \1 \*\//<CR>
"map ,( :s/^\(.*\)$/\(\* \1 \*\)/<CR>
"map ,< :s/^\(.*\)$/<!-- \1 -->/<CR>
"map ,d :s/^\([/(]\*\\|<!--\) \(.*\) \(\*[/)]\\|-->\)$/\2/<CR>
